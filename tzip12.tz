parameter (or
            (or
              (pair %balance_of
                (contract %callback (list (pair (nat %balance)
                                              (pair %request (address %owner)
                                                             (nat %token_id)))))
                (list %requests (pair (address %owner) (nat %token_id))))
              (pair %total_supply
                (contract %callback (list (pair (nat %token_id) (nat %total_supply))))
                (list %token_ids nat)))
            (or
              (list %transfer (pair (pair (nat %amount) (address %from_))
                                   (pair (address %to_) (nat %token_id))))
              (list %update_operators (or
                                       (pair %add_operator
                                         (pair (address %operator) (address %owner))
                                         (or %tokens (unit %all_tokens)
                                                     (set %some_tokens nat)))
                                       (pair %remove_operator
                                         (pair (address %operator) (address %owner))
                                         (or %tokens (unit %all_tokens)
                                                     (set %some_tokens nat)))))));
storage (pair
          (pair (big_map %token_balances (pair nat address) nat) (unit %token_operators))
          (big_map %total_token_supply nat nat));
code { LAMBDA
         (pair (pair address nat)
               (pair
                 (pair
                   (big_map %token_balances
                     (pair (nat %token_id) (address %token_owner))
                     nat)
                   (unit %token_operators))
                 (big_map %total_token_supply nat nat)))
         nat
         { DUP ;
           CDR ;
           CAR ;
           CAR ;
           DIG 1 ;
           DUP ;
           DUG 2 ;
           CAR ;
           CDR ;
           DIG 2 ;
           DUP ;
           DUG 3 ;
           CAR ;
           CAR ;
           PAIR ;
           DUP ;
           CAR ;
           DIG 1 ;
           DUP ;
           DUG 2 ;
           CDR ;
           PAIR ;
           DIP { DROP } ;
           GET ;
           IF_NONE { PUSH nat 0 } { DUP ; DIP { DROP } } ;
           DIP { DROP } } ;
       LAMBDA
         (pair (pair address nat)
               (pair nat
                     (pair
                       (pair
                         (big_map %token_balances
                           (pair (nat %token_id) (address %token_owner))
                           nat)
                         (unit %token_operators))
                       (big_map %total_token_supply nat nat))))
         (pair
           (pair
             (big_map %token_balances (pair (nat %token_id) (address %token_owner)) nat)
             (unit %token_operators))
           (big_map %total_token_supply nat nat))
         { DUP ;
           CDR ;
           CDR ;
           DUP ;
           DIG 1 ;
           DUP ;
           DUG 2 ;
           CAR ;
           CAR ;
           DIG 3 ;
           DUP ;
           DUG 4 ;
           CDR ;
           CAR ;
           DIG 4 ;
           DUP ;
           DUG 5 ;
           CAR ;
           CDR ;
           DIG 5 ;
           DUP ;
           DUG 6 ;
           CAR ;
           CAR ;
           PAIR ;
           DUP ;
           CAR ;
           DIG 1 ;
           DUP ;
           DUG 2 ;
           CDR ;
           PAIR ;
           DIP { DROP ; SOME } ;
           UPDATE ;
           DIP { DUP ; CDR ; SWAP ; CAR ; CDR } ;
           PAIR ;
           PAIR ;
           DIP { DROP 2 } } ;
       DIG 2 ;
       DUP ;
       DUG 3 ;
       CDR ;
       DIG 3 ;
       DUP ;
       DUG 4 ;
       CAR ;
       IF_LEFT
         { DUP ;
           IF_LEFT
             { DIG 2 ;
               DUP ;
               DUG 3 ;
               DIG 1 ;
               DUP ;
               DUG 2 ;
               PAIR ;
               DUP ;
               CAR ;
               DIG 1 ;
               DUP ;
               DUG 2 ;
               CDR ;
               DIG 1 ;
               DUP ;
               DUG 2 ;
               CDR ;
               MAP { DIG 1 ;
                     DUP ;
                     DUG 2 ;
                     DIG 1 ;
                     DUP ;
                     DUG 2 ;
                     PAIR ;
                     DIG 9 ;
                     DUP ;
                     DUG 10 ;
                     SWAP ;
                     EXEC ;
                     DIG 1 ;
                     DUP ;
                     DUG 2 ;
                     DIG 1 ;
                     DUP ;
                     DUG 2 ;
                     PAIR ;
                     DIP { DROP 2 } } ;
               DIG 2 ;
               DUP ;
               DUG 3 ;
               CAR ;
               PUSH mutez 0 ;
               DIG 2 ;
               DUP ;
               DUG 3 ;
               TRANSFER_TOKENS ;
               NIL operation ;
               DIG 1 ;
               DUP ;
               DUG 2 ;
               CONS ;
               DIG 3 ;
               DUP ;
               DUG 4 ;
               DIG 1 ;
               DUP ;
               DUG 2 ;
               PAIR ;
               DIP { DROP 7 } }
             { DIG 2 ;
               DUP ;
               DUG 3 ;
               DIG 1 ;
               DUP ;
               DUG 2 ;
               PAIR ;
               DUP ;
               CAR ;
               DIG 1 ;
               DUP ;
               DUG 2 ;
               CDR ;
               DIG 1 ;
               DUP ;
               DUG 2 ;
               CDR ;
               MAP { DIG 1 ;
                     DUP ;
                     DUG 2 ;
                     DIG 1 ;
                     DUP ;
                     DUG 2 ;
                     PAIR ;
                     DUP ;
                     CDR ;
                     CDR ;
                     DIG 1 ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     GET ;
                     IF_NONE { PUSH nat 0 } { DUP ; DIP { DROP } } ;
                     DIP { DROP } ;
                     DIG 1 ;
                     DUP ;
                     DUG 2 ;
                     PAIR ;
                     DIP { DROP } } ;
               DIG 2 ;
               DUP ;
               DUG 3 ;
               CAR ;
               PUSH mutez 0 ;
               DIG 2 ;
               DUP ;
               DUG 3 ;
               TRANSFER_TOKENS ;
               NIL operation ;
               DIG 1 ;
               DUP ;
               DUG 2 ;
               CONS ;
               DIG 3 ;
               DUP ;
               DUG 4 ;
               DIG 1 ;
               DUP ;
               DUG 2 ;
               PAIR ;
               DIP { DROP 7 } } ;
           DIP { DROP } }
         { DUP ;
           IF_LEFT
             { DIG 2 ;
               DUP ;
               DUG 3 ;
               DIG 1 ;
               DUP ;
               DUG 2 ;
               PAIR ;
               DUP ;
               CDR ;
               DIG 1 ;
               DUP ;
               DUG 2 ;
               CAR ;
               ITER { SWAP ;
                      PAIR ;
                      DUP ;
                      CAR ;
                      DIG 1 ;
                      DUP ;
                      DUG 2 ;
                      CDR ;
                      DIG 1 ;
                      DUP ;
                      DUG 2 ;
                      DIG 1 ;
                      DUP ;
                      DUG 2 ;
                      PAIR ;
                      DUP ;
                      CAR ;
                      DUP ;
                      CAR ;
                      CDR ;
                      SENDER ;
                      COMPARE ;
                      NEQ ;
                      IF { PUSH string "0" ; FAILWITH } { PUSH unit Unit } ;
                      DIG 1 ;
                      DUP ;
                      DUG 2 ;
                      CAR ;
                      CAR ;
                      DIG 3 ;
                      DUP ;
                      DUG 4 ;
                      CDR ;
                      DIG 3 ;
                      DUP ;
                      DUG 4 ;
                      CDR ;
                      CDR ;
                      DIG 4 ;
                      DUP ;
                      DUG 5 ;
                      CAR ;
                      CDR ;
                      PAIR ;
                      PAIR ;
                      DUP ;
                      CDR ;
                      CAR ;
                      CAR ;
                      DIG 1 ;
                      DUP ;
                      DUG 2 ;
                      CAR ;
                      CDR ;
                      DIG 2 ;
                      DUP ;
                      DUG 3 ;
                      CAR ;
                      CAR ;
                      PAIR ;
                      DUP ;
                      CAR ;
                      DIG 1 ;
                      DUP ;
                      DUG 2 ;
                      CDR ;
                      PAIR ;
                      DIP { DROP } ;
                      GET ;
                      IF_NONE { PUSH nat 0 } { DUP ; DIP { DROP } } ;
                      DIP { DROP } ;
                      COMPARE ;
                      LT ;
                      IF { PUSH string "1" ; FAILWITH } { PUSH unit Unit } ;
                      DROP 4 ;
                      PUSH unit Unit ;
                      DIG 2 ;
                      DUP ;
                      DUG 3 ;
                      DIG 2 ;
                      DUP ;
                      DUG 3 ;
                      PAIR ;
                      DUP ;
                      CAR ;
                      DIG 1 ;
                      DUP ;
                      DUG 2 ;
                      CDR ;
                      DIG 1 ;
                      DUP ;
                      DUG 2 ;
                      CAR ;
                      CAR ;
                      DIG 1 ;
                      DUP ;
                      DUG 2 ;
                      DIG 3 ;
                      DUP ;
                      DUG 4 ;
                      CDR ;
                      CDR ;
                      DIG 4 ;
                      DUP ;
                      DUG 5 ;
                      CAR ;
                      CDR ;
                      PAIR ;
                      PAIR ;
                      DIG 14 ;
                      DUP ;
                      DUG 15 ;
                      SWAP ;
                      EXEC ;
                      SUB ;
                      ABS ;
                      DIG 2 ;
                      DUP ;
                      DUG 3 ;
                      CAR ;
                      CAR ;
                      DIG 2 ;
                      DUP ;
                      DUG 3 ;
                      DIG 4 ;
                      DUP ;
                      DUG 5 ;
                      CDR ;
                      CDR ;
                      DIG 5 ;
                      DUP ;
                      DUG 6 ;
                      CDR ;
                      CAR ;
                      PAIR ;
                      PAIR ;
                      DIG 15 ;
                      DUP ;
                      DUG 16 ;
                      SWAP ;
                      EXEC ;
                      ADD ;
                      DIG 2 ;
                      DUP ;
                      DUG 3 ;
                      DIG 2 ;
                      DUP ;
                      DUG 3 ;
                      PAIR ;
                      DIG 4 ;
                      DUP ;
                      DUG 5 ;
                      CDR ;
                      CDR ;
                      DIG 5 ;
                      DUP ;
                      DUG 6 ;
                      CAR ;
                      CDR ;
                      PAIR ;
                      PAIR ;
                      DIG 14 ;
                      DUP ;
                      DUG 15 ;
                      SWAP ;
                      EXEC ;
                      DUP ;
                      DIG 2 ;
                      DUP ;
                      DUG 3 ;
                      PAIR ;
                      DIG 5 ;
                      DUP ;
                      DUG 6 ;
                      CDR ;
                      CDR ;
                      DIG 6 ;
                      DUP ;
                      DUG 7 ;
                      CDR ;
                      CAR ;
                      PAIR ;
                      PAIR ;
                      DIG 15 ;
                      DUP ;
                      DUG 16 ;
                      SWAP ;
                      EXEC ;
                      DUP ;
                      DIP { DROP 7 } ;
                      DUP ;
                      DIP { DROP 5 } } ;
               DUP ;
               NIL operation ;
               PAIR ;
               DIP { DROP 3 } }
             { DIG 2 ; DUP ; DUG 3 ; NIL operation ; PAIR ; DIP { DROP } } ;
           DIP { DROP } } ;
       DIP { DROP 4 } }